fragment FlexibleBlocks on ElementInterface {
    blocks: allFlexiblePageBlocks {
        id
        typeHandle
        ...BlockAudioContentWidth
        ...BlockRichText
        ...BlockDivider
        ...BlockCta
        ...BlockImageWithTextOverlay
        ...BlockFaqs
        ...BlockRichTextWithMedia
    }
}

# TODO Define all blocks here as fragments
fragment BlockAudioContentWidth on allFlexiblePageBlocks_audioContentWidth_BlockType {
    id
    audioContentWidth {
        ...on audioContentWidth_audioContentWidth_BlockType {
            id
            audioFile {
                url
            }
            captionTitle
            captionText
            header
            coverImage {
                url
            }
            coverImageAltText
        }
    }
}



fragment BlockRichText on allFlexiblePageBlocks_richText_BlockType {
    text
}

fragment BlockDivider on allFlexiblePageBlocks_divider_BlockType {
    divider
}

fragment BlockCta on allFlexiblePageBlocks_ctaBlockContentWidth_BlockType {
    innerBlocks: ctaBlockContentWidth {
        a
        ... on ctaBlockContentWidth_ctaBlockContentWidth_BlockType {
            id
            title: titleCtaContentWidth
            description: shortDescription
            buttonUrl: urlButtonUrl
            buttonText: urlButtonText
            icon
        }
    }
}

fragment BlockImageWithTextOverlay on allFlexiblePageBlocks_imageWithTextOverlay_BlockType {
    id
    imageWithTextOverlay {
        id
        ... on imageWithTextOverlay_imageWithTextOverlay_BlockType {
            id
            title: imageWithTextOverlayTitle
            description: shortDescription
            imageAltText
            image {
                url
            }
            imageAlignment: alignment
            urlButtonText
            urlButtonUrl
        }
    }
}

fragment BlockFaqs on allFlexiblePageBlocks_faqs_BlockType {
    id
    subheader
    shortDescription
    faqs {
        ... on faqs_questionAnswer_BlockType {
            id
            question
            answer
        }
    }
}

fragment BlockRichTextWithMedia on on allFlexiblePageBlocks_richTextWithMedia_BlockType {
    id
    richTextWithMedia {
        ... on richTextWithMedia_richTextWithMedia_BlockType {
            id
            text
            mediaType
            mediaUpload {
                id
                url
            }
            imageAltText
            imageAlignment: alignment
            imageCaption
        }
    }
}