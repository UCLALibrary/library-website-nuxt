#import "~/gql/fragments/Image"
query ServiceOrResourceDetail($slug: [String!]) {
    entry(section: "serviceOrResource", slug: $slug) {
        ... on serviceOrResource_serviceOrResource_Entry {
            id
            button: buttonUrl {
                ... on buttonUrl_button_BlockType {
                    id
                    buttonText
                    buttonUrl
                }
            }
            illustrationsResourcesAndServices
            heroImage {
                ... on heroImage_heroImage_BlockType {
                    id
                    image {
                        ...Image
                    }
                    altText
                }
            }
            type: serviceOrResourceType
            title
            text: shortDescription
            locations: associatedLocations {
                id
                to: slug
                title
            }
            resourceServiceWorkshop {
                ... on workshop_workshop_Entry {
                    id
                    text: shortDescription
                    title
                    to: slug
                }
                ... on serviceOrResource_serviceOrResource_Entry {
                    id
                    to: slug
                    text: shortDescription
                    serviceOrResourceType
                    title
                }
                ... on researchGuide_researchGuide_Entry {
                    id
                    title
                    researchGuideLink
                }
                ... on helpTopic_helpTopic_Entry {
                    id
                    text: shortDescription
                    to: slug
                    title
                }
            }
        }
        ...FlexibleBlocksServiceOrResource
    }
}
fragment FlexibleBlocksServiceOrResource on ElementInterface {
    blocks: serviceOrResourceBlocks {
        id
        typeHandle
        ...BlockDivider
        ...BlockPullQuote
        ...BlockSimpleCards
        ...BlockRichText
    }
}

fragment BlockRichText on serviceOrResourceBlocks_richText_BlockType {
    richText
}

fragment BlockPullQuote on serviceOrResourceBlocks_pullQuote_BlockType {
    id
    pullQuote {
        ... on pullQuote_pullQuote_BlockType {
            text
            attribution
        }
    }
}

fragment BlockDivider on serviceOrResourceBlocks_divider_BlockType {
    id
    divider
}

fragment BlockSimpleCards on serviceOrResourceBlocks_simpleCards_BlockType {
    id
    simpleCards {
        ... on simpleCards_simpleCard_BlockType {
            id
            linkText
            contentLink {
                id
                url
                title
                text: shortDescription
            }
            subheader
            externalLink
        }
    }
}
